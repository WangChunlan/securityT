buildscript {
    ext {
        springBootVersion = '1.5.4.RELEASE'
//        springBootVersion = '2.0.4.RELEASE'
        projectJdk = '1.8'
        projectGroup = 'com.security'
        projectVersion = '0.0.1'
        projectName = 'securitydemo'
        mavenUrl = "http://192.168.0.14/nexus/repository/maven-public/";
    }
    repositories {
        mavenLocal()
        maven { url = mavenUrl }
        mavenCentral();

        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'

group = projectGroup
version = projectVersion
sourceCompatibility = projectJdk
repositories {
    mavenLocal()
    maven { url = mavenUrl }
    maven { url "http://repo.spring.io/milestone" }
}
dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile("org.apache.tomcat.embed:tomcat-embed-jasper")
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    testCompile('org.springframework.boot:spring-boot-starter-test')

    // 导入spring security的依赖
    compile('org.springframework.boot:spring-boot-starter-security')
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity4', version: '3.0.2.RELEASE'
    compile 'org.springframework.security:spring-security-web:5.0.7.RELEASE'

    compile('com.alibaba:druid-spring-boot-starter:1.1.10')
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2")
    compile("mysql:mysql-connector-java:8.0.11")
    compile("com.github.pagehelper:pagehelper-spring-boot-starter:1.2.5")
    compile("org.springframework.boot:spring-boot-devtools")
    compile("tk.mybatis:mapper-spring-boot-starter:2.0.3")
    compile("org.mybatis.generator:mybatis-generator-core:1.3.7")
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.3'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    compile 'com.github.joschi.jackson:jackson-datatype-threetenbp:2.6.4'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'
    compile('org.springframework.social:spring-social-web:1.1.0.RELEASE')

    /*security */
    compile 'org.springframework.social:spring-social-config:1.1.6.RELEASE'
    compile 'org.springframework.social:spring-social-security:1.1.6.RELEASE'
    compile 'org.springframework.social:spring-social-core:1.1.6.RELEASE'
    compile 'org.springframework.social:spring-social-web:1.1.6.RELEASE'


}

def creatDir = {
    path ->
        File dir = new File(path);
        if (!dir.exists()) {
            dir.mkdirs();
        }
}

task makeJavaDir() {
    def paths = ['src/main/java', 'src/main/resources', 'src/test/java', 'src/test/resources'];
// 在创建任务之前 先遍历 路径
    doFirst {
        paths.forEach(creatDir);
    }
}

// src main resources 项目目录结构
task makeResourcesDir() {
    dependsOn 'makeJavaDir';
    def paths = ['src/main/resources/templates', 'src/main/resources/static', 'src/main/resources/mappers', 'src/main/resources/views'];
    doLast {
        paths.forEach(creatDir)
    }
}

// web 项目目录结构 包含了java项目目录结构
task makeWebDir() {
    dependsOn 'makeJavaDir';
    def paths = ['src/main/webapp', 'src/test/webapp'];
    doLast {
        paths.forEach(creatDir)
    }
}